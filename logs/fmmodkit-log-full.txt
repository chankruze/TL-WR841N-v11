ubuntu@ip-172-31-28-40:~/git-repo$ cd
ubuntu@ip-172-31-28-40:~$ ls
TL-WR841NV11_eu  TL-WR841NV11_eu.tar.gz  binwalk-master  firmware.bin  git-repo  master.zip
ubuntu@ip-172-31-28-40:~$ sudo apt-get install git build-essential zlib1g-dev liblzma-dev python-magic
Reading package lists... Done
Building dependency tree
Reading state information... Done
build-essential is already the newest version (12.4ubuntu1).
zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2).
git is already the newest version (1:2.17.1-1ubuntu0.4).
Suggested packages:
  liblzma-doc
The following NEW packages will be installed:
  liblzma-dev python-magic
0 upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 154 kB of archives.
After this operation, 712 kB of additional disk space will be used.
Do you want to continue? [Y/n] Y
Get:1 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu bionic/main amd64 liblzma-dev amd64 5.2.2-1.3 [145 kB]
Get:2 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu bionic/universe amd64 python-magic all 2:0.4.15-1 [9192 B]
Fetched 154 kB in 1s (120 kB/s)
Selecting previously unselected package liblzma-dev:amd64.
(Reading database ... 95865 files and directories currently installed.)
Preparing to unpack .../liblzma-dev_5.2.2-1.3_amd64.deb ...
Unpacking liblzma-dev:amd64 (5.2.2-1.3) ...
Selecting previously unselected package python-magic.
Preparing to unpack .../python-magic_2%3a0.4.15-1_all.deb ...
Unpacking python-magic (2:0.4.15-1) ...
Setting up python-magic (2:0.4.15-1) ...
Setting up liblzma-dev:amd64 (5.2.2-1.3) ...
ubuntu@ip-172-31-28-40:~$ clear
ubuntu@ip-172-31-28-40:~$ git clone https://github.com/rampageX/firmware-mod-kit.git
Cloning into 'firmware-mod-kit'...
remote: Enumerating objects: 3375, done.
remote: Total 3375 (delta 0), reused 0 (delta 0), pack-reused 3375
Receiving objects: 100% (3375/3375), 10.15 MiB | 3.26 MiB/s, done.
Resolving deltas: 100% (1692/1692), done.
ubuntu@ip-172-31-28-40:~$ cd firmware-mod-kit/
ubuntu@ip-172-31-28-40:~/firmware-mod-kit$ ls
README.md             common.inc                  deprecated                    ipkg_install.sh      other-scripts  uncpio.sh
build-firmware.sh     creating_ipkg_packages.htm  extract-firmware.sh           ipkg_install_all.sh  shared-ng.inc  uncramfs_all.sh
check_for_upgrade.sh  ddwrt-gui-extract.sh        firmware_mod_kit_version.txt  ipkg_remove.sh       shared.inc     unsquashfs_all.sh
cleanup.sh            ddwrt-gui-rebuild.sh        ipk_template                  ipkg_remove_all.sh   src
ubuntu@ip-172-31-28-40:~/firmware-mod-kit$ ./extract-firmware.sh ~/firmware.bin
Firmware Mod Kit (extract) 0.99, (c)2011-2013 Craig Heffner, Jeremy Collake

Preparing tools ...
In file included from untrx.cc:38:0:
untrx.h:44:3: warning: #warning "u_int32_t may be undefined. please define as 32-bit type." [-Wcpp]
  #warning "u_int32_t may be undefined. please define as 32-bit type."
   ^~~~~~~
In file included from splitter3.cc:39:0:
untrx.h:44:3: warning: #warning "u_int32_t may be undefined. please define as 32-bit type." [-Wcpp]
  #warning "u_int32_t may be undefined. please define as 32-bit type."
   ^~~~~~~
bff_huffman_decompress.c: In function ‘unpack_parse_header’:
bff_huffman_decompress.c:167:14: warning: implicit declaration of function ‘read’; did you mean ‘fread’? [-Wimplicit-function-declaration]
  bytesread = read(in, hdr + prelen, PACK_HEADER_LENGTH - prelen);
              ^~~~
              fread
bff_huffman_decompress.c: In function ‘unpack’:
bff_huffman_decompress.c:318:22: warning: implicit declaration of function ‘dup’ [-Wimplicit-function-declaration]
  unpack_parse_header(dup(in), dup(out), pre, prelen, bytes_in, &unpackd);
                      ^~~
uncramfs.c: In function ‘usage’:
uncramfs.c:72:4: warning: implicit declaration of function ‘exit’ [-Wimplicit-function-declaration]
    exit(1);
    ^~~~
uncramfs.c:72:4: warning: incompatible implicit declaration of built-in function ‘exit’
uncramfs.c:72:4: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
uncramfs.c: In function ‘do_file’:
uncramfs.c:231:28: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
       srcdata=(const u8*)(((u32)(base+offset)+blksize-1) & ~(blksize-1));
                            ^
uncramfs.c:231:15: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
       srcdata=(const u8*)(((u32)(base+offset)+blksize-1) & ~(blksize-1));
               ^
uncramfs.c: In function ‘do_symlink’:
uncramfs.c:315:7: warning: incompatible implicit declaration of built-in function ‘exit’
       exit(1);
       ^~~~
uncramfs.c:315:7: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
uncramfs.c: In function ‘do_chrdev’:
uncramfs.c:324:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
       snprintf(s, 17, "%3d, %3d", major(size), minor(size) );
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
uncramfs.c:324:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
       snprintf(s, 17, "%3d, %3d", major(size), minor(size) );
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
uncramfs.c: In function ‘do_blkdev’:
uncramfs.c:364:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
       snprintf(s, 17, "%3d, %3d", major(size), minor(size) );
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
uncramfs.c:364:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
uncramfs.c: In function ‘main’:
uncramfs.c:696:3: warning: incompatible implicit declaration of built-in function ‘exit’
   exit(1);
   ^~~~
uncramfs.c:696:3: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
uncramfs.c:703:7: warning: incompatible implicit declaration of built-in function ‘exit’
       exit(1);
       ^~~~
uncramfs.c:703:7: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
uncramfs.c:712:7: warning: incompatible implicit declaration of built-in function ‘exit’
       exit(1);
       ^~~~
uncramfs.c:712:7: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
uncramfs.c:720:7: warning: incompatible implicit declaration of built-in function ‘exit’
       exit(1);
       ^~~~
uncramfs.c:720:7: note: include ‘<stdlib.h>’ or provide a declaration of ‘exit’
uncramfs.c:727:29: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
    printf("[Volume size: 0x%x]\n", fslen_ub);
                            ~^
                            %lx
LzmaTest.c: In function ‘main’:
LzmaTest.c:238:10: warning: format not a string literal and no format arguments [-Wformat-security]
   printf(sz);
          ^~
decode.c: In function ‘lzma_decode’:
decode.c:127:41: warning: pointer targets in passing argument 10 of ‘LzmaDecode’ differ in signedness [-Wpointer-sign]
  (u8 *)src, srclen, (u8 *)dst, out_len, &dstlen);
                                         ^
In file included from decode.c:51:0:
LzmaDecode.h:86:5: note: expected ‘unsigned int *’ but argument is of type ‘int *’
 int LzmaDecode(
     ^~~~~~~~~~
mkcramfs.c: In function ‘parse_directory’:
mkcramfs.c:245:40: warning: passing argument 4 of ‘scandir’ from incompatible pointer type [-Wincompatible-pointer-types]
  dircount = scandir(name, &dirlist, 0, cramsort);
                                        ^~~~~~~~
In file included from mkcramfs.c:31:0:
/usr/include/dirent.h:255:12: note: expected ‘int (*)(const struct dirent **, const struct dirent **)’ but argument is of type ‘int (*)(const void *, const void *)’
 extern int scandir (const char *__restrict __dir,
            ^~~~~~~
mkcramfs.c:287:15: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]
   entry->name = strdup(dirent->d_name);
               ^
mkcramfs.c: In function ‘write_superblock’:
mkcramfs.c:399:11: warning: pointer targets in passing argument 1 of ‘strncpy’ differ in signedness [-Wpointer-sign]
   strncpy(super->name, opt_name, sizeof(super->name));
           ^~~~~
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:25,
                 from mkcramfs.c:25:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:103:1: note: expected ‘char * restrict’ but argument is of type ‘u8 * {aka unsigned char *}’
 __NTH (strncpy (char *__restrict __dest, const char *__restrict __src,
 ^
mkcramfs.c:401:11: warning: pointer targets in passing argument 1 of ‘strncpy’ differ in signedness [-Wpointer-sign]
   strncpy(super->name, "Compressed", sizeof(super->name));
           ^~~~~
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:25,
                 from mkcramfs.c:25:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:103:1: note: expected ‘char * restrict’ but argument is of type ‘u8 * {aka unsigned char *}’
 __NTH (strncpy (char *__restrict __dest, const char *__restrict __src,
 ^
mkcramfs.c: In function ‘print_node’:
mkcramfs.c:445:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   snprintf(info, 10, "%4d,%4d", major(e->size), minor(e->size));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                         
mkcramfs.c:445:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   snprintf(info, 10, "%4d,%4d", major(e->size), minor(e->size));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                         
mkcramfs.c: In function ‘write_directory_structure’:
mkcramfs.c:480:24: warning: pointer targets in passing argument 1 of ‘strlen’ differ in signedness [-Wpointer-sign]
    size_t len = strlen(entry->name);
                        ^~~~~
In file included from mkcramfs.c:34:0:
/usr/include/string.h:384:15: note: expected ‘const char *’ but argument is of type ‘unsigned char *’
 extern size_t strlen (const char *__s)
               ^~~~~~
mkcramfs.c: In function ‘do_compress’:
mkcramfs.c:598:20: warning: pointer targets in passing argument 1 of ‘compress2’ differ in signedness [-Wpointer-sign]
    err = compress2(base + curr, &len, uncompressed, input, Z_BEST_COMPRESSION);
                    ^~~~
In file included from mkcramfs.c:37:0:
/usr/include/zlib.h:1243:21: note: expected ‘Bytef * {aka unsigned char *}’ but argument is of type ‘char *’
 ZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,
                     ^~~~~~~~~
mkcramfs.c:598:39: warning: pointer targets in passing argument 3 of ‘compress2’ differ in signedness [-Wpointer-sign]
    err = compress2(base + curr, &len, uncompressed, input, Z_BEST_COMPRESSION);
                                       ^~~~~~~~~~~~
In file included from mkcramfs.c:37:0:
/usr/include/zlib.h:1243:21: note: expected ‘const Bytef * {aka const unsigned char *}’ but argument is of type ‘char *’
 ZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,
                     ^~~~~~~~~
mkcramfs.c: In function ‘write_data’:
mkcramfs.c:647:40: warning: pointer targets in passing argument 3 of ‘do_compress’ differ in signedness [-Wpointer-sign]
     offset = do_compress(base, offset, entry->name, entry->uncompressed, entry->size);
                                        ^~~~~
mkcramfs.c:578:21: note: expected ‘const char *’ but argument is of type ‘unsigned char *’
 static unsigned int do_compress(char *base, unsigned int offset, char const *name, char *uncompressed, unsigned int size)
                     ^~~~~~~~~~~
mkcramfs.c: In function ‘main’:
mkcramfs.c:771:59: warning: format ‘%Ld’ expects argument of type ‘long long int’, but argument 3 has type ‘loff_t {aka long int}’ [-Wformat=]
    "warning: estimate of required size (upper bound) is %LdMB, but maximum image size is %uMB, we might die prematurely\n",
                                                         ~~^
                                                         %ld
    fslen_ub >> 20,
    ~~~~~~~~~~~~~~
mkcramfs.c:810:27: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘ssize_t {aka long int}’ [-Wformat=]
  printf("Directory data: %d bytes\n", offset);
                          ~^
                          %ld
mkcramfs.c:817:23: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘ssize_t {aka long int}’ [-Wformat=]
  printf("Everything: %d kilobytes\n", offset >> 10);
                      ~^               ~~~~~~~~~~~~
                      %ld
mkcramfs.c:821:24: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
  printf("Super block: %d bytes\n", sizeof(struct cramfs_super));
                       ~^
                       %ld
mkcramfs.c:825:19: warning: pointer targets in passing argument 2 of ‘crc32’ differ in signedness [-Wpointer-sign]
  crc = crc32(crc, (rom_image+opt_pad), (offset-opt_pad));
                   ^
In file included from mkcramfs.c:37:0:
/usr/include/zlib.h:1726:23: note: expected ‘const Bytef * {aka const unsigned char *}’ but argument is of type ‘char *’
 ZEXTERN uLong ZEXPORT crc32   OF((uLong crc, const Bytef *buf, uInt len));
                       ^~~~~
mkcramfs.c:705:4: warning: this statement may fall through [-Wimplicit-fallthrough=]
    usage(MKFS_OK);
    ^~~~~~~~~~~~~~
mkcramfs.c:706:3: note: here
   case 'E':
   ^~~~
mkcramfs.c:445:27: warning: ‘%4d’ directive output may be truncated writing between 4 and 7 bytes into a region of size 5 [-Wformat-truncation=]
   snprintf(info, 10, "%4d,%4d", major(e->size), minor(e->size));
                           ^~~
mkcramfs.c:445:22: note: directive argument in the range [0, 1048575]
   snprintf(info, 10, "%4d,%4d", major(e->size), minor(e->size));
                      ^~~~~~~~~
In file included from /usr/include/stdio.h:862:0,
                 from mkcramfs.c:26:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:64:10: note: ‘__builtin___snprintf_chk’ output between 10 and 13 bytes into a destinationof size 10
   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        __bos (__s), __fmt, __va_arg_pack ());
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsck.c: In function ‘main’:
cramfsck.c:671:4: warning: this statement may fall through [-Wimplicit-fallthrough=]
    usage(FSCK_OK);
    ^~~~~~~~~~~~~~
cramfsck.c:672:3: note: here
   case 'x':
   ^~~~
cramfsck.c: In function ‘test_crc’:
cramfsck.c:224:4: warning: ignoring return value of ‘read’, declared with attribute warn_unused_result [-Wunused-result]
    read(fd, buf, super.size);
    ^~~~~~~~~~~~~~~~~~~~~~~~~
cramfsck.c: In function ‘romfs_read’:
cramfsck.c:294:3: warning: ignoring return value of ‘read’, declared with attribute warn_unused_result [-Wunused-result]
   read(fd, read_buffer, ROMBUFFERSIZE * 2);
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsck.c: In function ‘do_symlink’:
cramfsck.c:553:3: warning: ignoring return value of ‘asprintf’, declared with attribute warn_unused_result [-Wunused-result]
   asprintf(&str, "%s -> %s", path, outbuffer);
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsswap.c: In function ‘main’:
cramfsswap.c:112:3: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
   write(outfile, &superblock_out, sizeof(superblock_out));
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsswap.c:242:5: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
     write(outfile, &inode_out, sizeof(inode_out));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsswap.c:250:5: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
     write(outfile, &buffer, inode.namelen<<2);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsswap.c:302:7: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
       write(outfile, &blockpointer_out, 4);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsswap.c:328:7: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
       write(outfile, &buffer, readbytes);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cramfsswap.c:341:5: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
     write(outfile, &buffer, readbytes);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:577:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf.st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                              
mksquashfs.c:578:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf.st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                         
mksquashfs.c: In function ‘dir_scan’:
mksquashfs.c:51:51: warning: format ‘%Ld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
 #define INFO(s, args...)  do { if(!silent) printf("mksquashfs: "s, ## args); } while(0)
                                                   ^
mksquashfs.c:1444:67:
      INFO("file %s, uncompressed size %Ld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~
mksquashfs.c:1444:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %Ld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:1444:41: note: format string is defined here
      INFO("file %s, uncompressed size %Ld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~^
                                       %ld
mksquashfs.c: In function ‘write_file’:
mksquashfs.c:1170:5: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
     ftruncate(fd, bytes);
     ^~~~~~~~~~~~~~~~~~~~
../LZMA/LZMADecoder.cpp: In member function ‘virtual LONG NCompress::NLZMA::CDecoder::SetOutStreamSize(const UInt64*)’:
../LZMA/LZMADecoder.cpp:317:23: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
   if (_outSizeDefined = (outSize != NULL))
       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32, UInt32&, UInt32&)’:
../LZMA/LZMAEncoder.cpp:1139:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1<<12)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1154:44: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]

         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
           !ChangePair(backMain, _matchDistances[_longestMatchLength]) ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1157:60: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]

         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
           ChangePair(_matchDistances[lenMain - 1], backMain)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/String.cpp:11:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.cpp:11:0:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/Vector.cpp:7:0:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
ar: creating liblzma.a
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:549:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
        makedev((inodep->rdev >> 8) & 0xff, inodep->rdev & 0xff))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                         
unsquashfs.c:559:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:62:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:550:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
        makedev((inodep->rdev >> 8) & 0xff, inodep->rdev & 0xff))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                         
unsquashfs.c:560:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:62:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:669:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:670:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘write_file’:
mksquashfs.c:111:22: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 3 has type ‘int’ [-Wformat=]
      fprintf(stderr, "FATAL ERROR:" s, ##args);\
                      ^
mksquashfs.c:1232:5: note: in expansion of macro ‘BAD_ERROR’
     BAD_ERROR("Out of memory allocating write_file buffer, could not allocate %ld blocks (%d Kbytes)\n", allocated_blocks, allocated_blocks << (block_log - 10));
     ^~~~~~~~~
mksquashfs.c:1232:81: note: format string is defined here
     BAD_ERROR("Out of memory allocating write_file buffer, could not allocate %ld blocks (%d Kbytes)\n", allocated_blocks, allocated_blocks << (block_log - 10));
                                                                               ~~^
                                                                               %d
mksquashfs.c: In function ‘dir_scan’:
mksquashfs.c:1590:2: warning: implicit declaration of function ‘dir_scan2’; did you mean ‘dir_scan’? [-Wimplicit-function-declaration]
  dir_scan2(inode, dir_info);
  ^~~~~~~~~
  dir_scan
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:98:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:1660:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:1660:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:1660:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:98:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:1716:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:1716:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:1716:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file’:
mksquashfs.c:1270:5: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
     ftruncate(fd, bytes);
     ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:246:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:246:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:255:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:254:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:254:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
ZLib.cpp: In function ‘void* brute(void*)’:
ZLib.cpp:334:5: warning: unused variable ‘ret’ [-Wunused-variable]
 int ret =  compress2_lzma_test(test2,&test3len,testsource,testsourcelen,testlevel,testfb,takelcvalue,takelpvalue,takepbvalue);
     ^~~
../LZMA/LZMADecoder.cpp: In member function ‘virtual LONG NCompress::NLZMA::CDecoder::SetOutStreamSize(const UInt64*)’:
../LZMA/LZMADecoder.cpp:317:23: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
   if (_outSizeDefined = (outSize != NULL))
       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32, UInt32&, UInt32&)’:
../LZMA/LZMAEncoder.cpp:1141:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1<<12)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1156:44: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]

         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
           !ChangePair(backMain, _matchDistances[_longestMatchLength]) ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1159:60: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]

         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
           ChangePair(_matchDistances[lenMain - 1], backMain)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/String.cpp:11:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.cpp:11:0:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/Vector.cpp:7:0:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
ar: creating liblzma.a
wrt54gv5_img.cpp:675:9: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]
  printf("\n "VERSION_TEXT " - " __DATE__ " by Jeremy Collake (jeremy@bitsum.com)");
         ^
wrt54gv5_img.cpp:76:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 };
 ^
wrt54gv5_img.cpp:76:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:76:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:83:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 };
 ^
wrt54gv5_img.cpp:83:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:83:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:90:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 };
 ^
wrt54gv5_img.cpp:90:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:90:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:97:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 };
 ^
wrt54gv5_img.cpp:97:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp:97:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
wrt54gv5_img.cpp: In function ‘bool SanityChecks()’:
wrt54gv5_img.cpp:176:113: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
   printf("\n ! ERROR: Header definition is incorrect .. %d (%X)",sizeof(VxLinksysHeader),sizeof(VxLinksysHeader));
                                                                                                                 ^
wrt54gv5_img.cpp:176:113: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
wrt54gv5_img.cpp: In function ‘int BuildImage(std::vector<std::__cxx11::basic_string<char> >&, const char*, char*, char*, char*)’:
wrt54gv5_img.cpp:304:72: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
   printf("\n + Size of %s is %d bytes.", vInputFiles[nI].c_str(), nSize);
                                                                        ^
wrt54gv5_img.cpp:311:66: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
    printf("\n   Padding will be %d bytes in length.", nDifference);
                                                                  ^
wrt54gv5_img.cpp:404:65: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
     printf("\n + Padding bootrom.bin with %d bytes", nDifference);
                                                                 ^
wrt54gv5_img.cpp:417:100: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
   printf("\n + Stored with file type %d (%s)", big_endian_l(pFileDescriptor->nFileId_BigEnd),szName);
                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ^
wrt54gv5_img.cpp:431:72: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
  printf("\n + Checksum is %08X", big_endian_l(pHeader->nChecksumBigEnd));
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
wrt54gv5_img.cpp:440:55: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
  printf("\n Firmware size is %d bytes.", nFirmwareSize);
                                                       ^
wrt54gv5_img.cpp: In function ‘int ExtractImage(const char*, const char*, bool)’:
wrt54gv5_img.cpp:496:54: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long int’ [-Wformat=]
  printf("\n Firmare file size is %d bytes", nFilesize);
                                                      ^
wrt54gv5_img.cpp:542:55: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 8 has type ‘long unsigned int’ [-Wformat=]
   nChecksum==nCalculatedChecksum?"CORRECT":"INCORRECT");
                                                       ^
wrt54gv5_img.cpp:542:55: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 9 has type ‘long unsigned int’ [-Wformat=]
wrt54gv5_img.cpp:561:17: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
     big_endian_l(pFileDescriptor->nFileId_BigEnd),
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     nIntFilesize);
                 ^
wrt54gv5_img.cpp:561:17: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
wrt54gv5_img.cpp:597:16: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
wrt54gv5_img.cpp:595:4:
    big_endian_l(pFileDescriptor->nFileId_BigEnd),
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wrt54gv5_img.cpp:597:16:
    nIntFilesize);
                ^
wrt54gv5_img.cpp:597:16: warning: format ‘%d’ expects argument of type ‘int’, but argument 5 has type ‘long unsigned int’ [-Wformat=]
wrt54gv5_img.cpp: In function ‘int FixImage(const char*)’:
wrt54gv5_img.cpp:653:82: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
  printf("\n Original checksum was 0x%08X", big_endian_l(pHeader->nChecksumBigEnd));
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
wrt54gv5_img.cpp:658:82: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
  printf("\n New checksum is       0x%08X", big_endian_l(pHeader->nChecksumBigEnd));
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
wrt54gv5_img.cpp: In function ‘int ExtractImage(const char*, const char*, bool)’:
wrt54gv5_img.cpp:499:7: warning: ignoring return value of ‘size_t fread(void*, size_t, size_t, FILE*)’, declared with attribute warn_unused_result [-Wunused-result]
  fread((void *)&buffer[0],1,nFilesize,fIn);
  ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/string.h:494:0,
                 from /usr/include/c++/7/cstring:42,
                 from wrt54gv5_img.cpp:42:
In function ‘char* strcpy(char*, const char*)’,
    inlined from ‘int BuildImage(std::vector<std::__cxx11::basic_string<char> >&, const char*, char*, char*, char*)’ at wrt54gv5_img.cpp:334:8:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: warning: ‘void* __builtin___memcpy_chk(void*, const void*, long unsignedint, long unsigned int)’ writing 5 bytes into a region of size 4 overflows the destination [-Wstringop-overflow=]
   return __builtin___strcpy_chk (__dest, __src, __bos (__dest));
                                                               ^
mksquashfs.c: In function ‘special_file’:
mksquashfs.c:270:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
    buf->st_rdev = makedev(maj, min);
             ^~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                     
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:650:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf.st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                              
mksquashfs.c:651:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf.st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                         
mksquashfs.c: In function ‘dir_scan’:
mksquashfs.c:63:51: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
 #define INFO(s, args...)  do { if(!silent) printf("mksquashfs: "s, ## args); } while(0)
                                                   ^
mksquashfs.c:1532:68:
      INFO("file %s, uncompressed size %lld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
                                                                    ~~~~~
mksquashfs.c:1532:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:1532:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
ar: creating liblzma.a
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:549:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
        makedev((inodep->rdev >> 8) & 0xff, inodep->rdev & 0xff))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                         
unsquashfs.c:559:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:62:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:638:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:639:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘write_file’:
mksquashfs.c:80:22: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 3 has type ‘int’ [-Wformat=]
      fprintf(stderr, "FATAL ERROR:" s, ##args);\
                      ^
mksquashfs.c:1201:5: note: in expansion of macro ‘BAD_ERROR’
     BAD_ERROR("Out of memory allocating write_file buffer, could not allocate %ld blocks (%d Kbytes)\n", allocated_blocks, allocated_blocks << (block_log - 10));
     ^~~~~~~~~
mksquashfs.c:1201:81: note: format string is defined here
     BAD_ERROR("Out of memory allocating write_file buffer, could not allocate %ld blocks (%d Kbytes)\n", allocated_blocks, allocated_blocks << (block_log - 10));
                                                                               ~~^
                                                                               %d
mksquashfs.c: In function ‘dir_scan’:
mksquashfs.c:1559:2: warning: implicit declaration of function ‘dir_scan2’; did you mean ‘dir_scan’? [-Wimplicit-function-declaration]
  dir_scan2(inode, dir_info);
  ^~~~~~~~~
  dir_scan
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:67:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:1629:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:1629:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:1629:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:67:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:1685:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:1685:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:1685:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file’:
mksquashfs.c:1239:5: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
     ftruncate(fd, bytes);
     ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:246:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:246:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:255:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:254:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:254:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
../LZMA/LZMADecoder.cpp: In member function ‘virtual LONG NCompress::NLZMA::CDecoder::SetOutStreamSize(const UInt64*)’:
../LZMA/LZMADecoder.cpp:317:23: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
   if (_outSizeDefined = (outSize != NULL))
       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32, UInt32&, UInt32&)’:
../LZMA/LZMAEncoder.cpp:1139:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1<<12)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1154:44: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]

         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
           !ChangePair(backMain, _matchDistances[_longestMatchLength]) ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1157:60: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]

         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
           ChangePair(_matchDistances[lenMain - 1], backMain)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/String.cpp:11:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.cpp:11:0:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/Vector.cpp:7:0:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:161:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:164:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
ar: creating liblzma.a
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:543:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
        makedev((inodep->rdev >> 8) & 0xff, inodep->rdev & 0xff))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                         
unsquashfs.c:553:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:59:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:947:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:948:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘progress_bar’:
mksquashfs.c:1833:3: warning: ‘return’ with no value, in function returning non-void
   return;
   ^~~~~~
mksquashfs.c:1825:5: note: declared here
 int progress_bar(long long current, long long max, int columns)
     ^~~~~~~~~~~~
mksquashfs.c: In function ‘dir_scan’:
mksquashfs.c:2428:2: warning: implicit declaration of function ‘dir_scan2’; did you mean ‘dir_scan’? [-Wimplicit-function-declaration]
  dir_scan2(inode, dir_info);
  ^~~~~~~~~
  dir_scan
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:73:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2503:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2503:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2503:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:73:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2559:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2559:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2559:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:1993:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2077:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2101:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:241:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:239:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:239:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:247:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:247:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:654:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
unsquashfs.c:663:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:61:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
unsquashfs.c: In function ‘create_inode_2’:
unsquashfs.c:812:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
unsquashfs.c:821:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:61:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
uncomp.c: In function ‘sqlzma_un’:
uncomp.c:148:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
uncomp_r.c: In function ‘sqlzma_un’:
uncomp_r.c:148:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from LzmaAlone.cpp:18:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from LzmaAlone.cpp:18:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LzmaAlone.cpp: In function ‘int main2(int, const char**)’:
LzmaAlone.cpp:470:36: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kWriteError);
                                    ^
LzmaAlone.cpp:495:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:500:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:514:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaAlone.cpp:519:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaBenchCon.cpp: In member function ‘virtual LONG CBenchCallback::SetDecodeResult(const CBenchInfo&, bool)’:
LzmaBenchCon.cpp:145:20: warning: format not a string literal and no format arguments [-Wformat-security]
     fprintf(f, kSep);
                    ^
LzmaBenchCon.cpp: In function ‘LONG LzmaBenchCon(FILE*, UInt32, UInt32, UInt32)’:
LzmaBenchCon.cpp:204:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
LzmaBenchCon.cpp:211:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
../LZMA/LZMAEncoder.cpp: In member function ‘UInt32 NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32&)’:
../LZMA/LZMAEncoder.cpp:1185:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1186:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1202:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1205:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::CodeOneBlock(UInt64*, UInt64*, Int32*)’:
../LZMA/LZMAEncoder.cpp:1350:12: warning: variable ‘len’ set but not used [-Wunused-but-set-variable]
     UInt32 len, numDistancePairs;
            ^~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/MyString.cpp:11:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.cpp:11:0:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyVector.cpp:7:0:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LZMAEncoder_r.cc: In member function ‘UInt32 NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32&)’:
LZMAEncoder_r.cc:1185:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1186:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1202:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1205:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc: In member function ‘LONG NCompress::NLZMA::CEncoder::CodeOneBlock(UInt64*, UInt64*, Int32*)’:
LZMAEncoder_r.cc:1350:12: warning: variable ‘len’ set but not used [-Wunused-but-set-variable]
     UInt32 len, numDistancePairs;
            ^~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from comp.cc:20:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from comp.cc:20:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
comp.cc: In function ‘int LzmaCompress(Bytef*, uInt, Bytef*, uInt, sqlzma_opts*, uLong*)’:
comp.cc:125:2: warning: narrowing conversion of ‘avail_in’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
  };
  ^
comp.cc:123:22: warning: narrowing conversion of ‘(avail_in >> 8)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
             ~~~~~~~~~^~~~
comp.cc:123:37: warning: narrowing conversion of ‘(avail_in >> 16)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                            ~~~~~~~~~^~~~~
comp.cc:123:53: warning: narrowing conversion of ‘(avail_in >> 24)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                                            ~~~~~~~~~^~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:942:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:943:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:75:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2501:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2501:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2501:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:75:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2557:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2557:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2557:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:1991:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2075:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2099:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:241:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:239:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:239:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:247:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:247:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:657:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
unsquashfs.c: In function ‘create_inode_2’:
unsquashfs.c:815:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
LzmaTest.c: In function ‘PrintError’:
LzmaTest.c:67:3: warning: format not a string literal and no format arguments [-Wformat-security]
   sprintf(buffer + strlen(buffer), message);
   ^~~~~~~
LzmaTest.c: In function ‘main’:
LzmaTest.c:340:10: warning: format not a string literal and no format arguments [-Wformat-security]
   printf(rs);
          ^~
uncomp.c: In function ‘sqlzma_un’:
uncomp.c:147:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
uncomp_r.c: In function ‘sqlzma_un’:
uncomp_r.c:147:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from LzmaAlone.cpp:18:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:178:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:181:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from LzmaAlone.cpp:18:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LzmaAlone.cpp: In function ‘int main2(int, const char**)’:
LzmaAlone.cpp:371:34: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
     if (matchFinderCyclesDefined = parser[NKey::kMatchFinderCycles].ThereIs)
         ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LzmaAlone.cpp:447:36: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kWriteError);
                                    ^
LzmaAlone.cpp:473:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:478:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:492:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaAlone.cpp:497:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
In file included from ../LZMA/LZMADecoder.h:6:0,
                 from LzmaBench.cpp:12:
LzmaBench.cpp: In member function ‘virtual ULONG CBenchmarkInStream::Release()’:
../LZMA/../../../Common/MyCom.h:160:31: warning: deleting object of polymorphic class type ‘CBenchmarkInStream’ which has non-virtualdestructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
   return __m_RefCount; delete this; return 0; }
                               ^
../LZMA/../../../Common/MyCom.h:171:3: note: in expansion of macro ‘MY_ADDREF_RELEASE’
   MY_ADDREF_RELEASE
   ^~~~~~~~~~~~~~~~~
LzmaBench.cpp:152:3: note: in expansion of macro ‘MY_UNKNOWN_IMP’
   MY_UNKNOWN_IMP
   ^~~~~~~~~~~~~~
LzmaBench.cpp: In member function ‘virtual ULONG CCrcOutStream::Release()’:
../LZMA/../../../Common/MyCom.h:160:31: warning: deleting object of polymorphic class type ‘CCrcOutStream’ which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
   return __m_RefCount; delete this; return 0; }
                               ^
../LZMA/../../../Common/MyCom.h:171:3: note: in expansion of macro ‘MY_ADDREF_RELEASE’
   MY_ADDREF_RELEASE
   ^~~~~~~~~~~~~~~~~
LzmaBench.cpp:220:3: note: in expansion of macro ‘MY_UNKNOWN_IMP’
   MY_UNKNOWN_IMP
   ^~~~~~~~~~~~~~
LzmaBench.cpp: In member function ‘virtual ULONG CProgressInfo::Release()’:
../LZMA/../../../Common/MyCom.h:160:31: warning: deleting object of polymorphic class type ‘CProgressInfo’ which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
   return __m_RefCount; delete this; return 0; }
                               ^
../LZMA/../../../Common/MyCom.h:171:3: note: in expansion of macro ‘MY_ADDREF_RELEASE’
   MY_ADDREF_RELEASE
   ^~~~~~~~~~~~~~~~~
LzmaBench.cpp:269:3: note: in expansion of macro ‘MY_UNKNOWN_IMP’
   MY_UNKNOWN_IMP
   ^~~~~~~~~~~~~~
LzmaBench.cpp: In function ‘void ThrowError(FILE*, LONG, const char*)’:
LzmaBench.cpp:366:17: warning: format not a string literal and no format arguments [-Wformat-security]
     fprintf(f, s);
                 ^
In file included from ../LZMA/LZMADecoder.h:6:0,
                 from LzmaRam.cpp:5:
LzmaRam.cpp: In member function ‘virtual ULONG CInStreamRam::Release()’:
../LZMA/../../../Common/MyCom.h:160:31: warning: deleting object of polymorphic class type ‘CInStreamRam’ which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
   return __m_RefCount; delete this; return 0; }
                               ^
../LZMA/../../../Common/MyCom.h:171:3: note: in expansion of macro ‘MY_ADDREF_RELEASE’
   MY_ADDREF_RELEASE
   ^~~~~~~~~~~~~~~~~
LzmaRam.cpp:22:3: note: in expansion of macro ‘MY_UNKNOWN_IMP’
   MY_UNKNOWN_IMP
   ^~~~~~~~~~~~~~
LzmaRam.cpp: In member function ‘virtual ULONG COutStreamRam::Release()’:
../LZMA/../../../Common/MyCom.h:160:31: warning: deleting object of polymorphic class type ‘COutStreamRam’ which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
   return __m_RefCount; delete this; return 0; }
                               ^
../LZMA/../../../Common/MyCom.h:171:3: note: in expansion of macro ‘MY_ADDREF_RELEASE’
   MY_ADDREF_RELEASE
   ^~~~~~~~~~~~~~~~~
LzmaRam.cpp:66:3: note: in expansion of macro ‘MY_UNKNOWN_IMP’
   MY_UNKNOWN_IMP
   ^~~~~~~~~~~~~~
../LZMA/LZMADecoder.cpp: In member function ‘virtual LONG NCompress::NLZMA::CDecoder::SetOutStreamSize(const UInt64*)’:
../LZMA/LZMADecoder.cpp:312:23: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
   if (_outSizeDefined = (outSize != NULL))
       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32, UInt32&, UInt32&)’:
../LZMA/LZMAEncoder.cpp:1207:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1208:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1222:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1225:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:178:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:181:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/String.cpp:11:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:178:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:181:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.cpp:11:0:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:178:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:181:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/Vector.cpp:7:0:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:178:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:181:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LZMAEncoder_r.cc: In member function ‘LONG NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32, UInt32&, UInt32&)’:
LZMAEncoder_r.cc:1207:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1208:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1222:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1225:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../../Common/String.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from comp.cc:20:
../../../Common/Vector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/Vector.h:178:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/Vector.h:181:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from comp.cc:20:
../../../Common/String.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/String.h:417:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/String.h:420:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
comp.cc: In function ‘int LzmaCompress(Bytef*, uInt, Bytef*, uInt, uLong*)’:
comp.cc:123:2: warning: narrowing conversion of ‘avail_in’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
  };
  ^
comp.cc:121:22: warning: narrowing conversion of ‘(avail_in >> 8)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
             ~~~~~~~~~^~~~
comp.cc:121:37: warning: narrowing conversion of ‘(avail_in >> 16)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                            ~~~~~~~~~^~~~~
comp.cc:121:53: warning: narrowing conversion of ‘(avail_in >> 24)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                                            ~~~~~~~~~^~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:938:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:939:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:75:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2497:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2497:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2497:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:75:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2553:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2553:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2553:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:1987:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2071:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2095:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:241:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:239:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:239:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:247:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:247:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:657:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
unsquashfs.c: In function ‘create_inode_2’:
unsquashfs.c:815:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:961:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:962:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:76:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2525:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2525:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2525:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:76:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2581:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2581:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2581:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2015:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2099:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2123:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:241:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:239:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:239:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:247:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:247:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:669:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
unsquashfs.c: In function ‘create_inode_2’:
unsquashfs.c:827:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:962:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:963:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:77:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2526:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2526:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2526:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:77:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2582:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2582:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2582:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2016:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2100:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2124:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:241:7:
       entry->dir->inode->buf.st_size,
       ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:239:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n",
      ^~~~
sort.c:239:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n",
                                       ~~~^
                                       %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:247:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:247:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:669:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
unsquashfs.c: In function ‘create_inode_2’:
unsquashfs.c:827:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      & 0xff, inodep->rdev & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:981:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:982:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c:995:10: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘char *’ [-Wformat=]
    ERROR("Failed to read symlink %d, creating empty symlink\n", filename);
          ^
mksquashfs.c:79:22: note: in definition of macro ‘ERROR’
      fprintf(stderr, s, ## args);\
                      ^
mksquashfs.c:1000:10: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘char *’ [-Wformat=]
    ERROR("Symlink %d is greater than 65536 bytes! Creating empty symlink\n", filename);
          ^
mksquashfs.c:79:22: note: in definition of macro ‘ERROR’
      fprintf(stderr, s, ## args);\
                      ^
mksquashfs.c:89:22: warning: format ‘%d’ expects a matching ‘int’ argument [-Wformat=]
      fprintf(stderr, "FATAL ERROR:" s, ##args);\
                      ^
mksquashfs.c:1026:3: note: in expansion of macro ‘BAD_ERROR’
   BAD_ERROR("Unrecognised inode %d in create_inode\n");
   ^~~~~~~~~
mksquashfs.c:1026:34: note: format string is defined here
   BAD_ERROR("Unrecognised inode %d in create_inode\n");
                                 ~^
mksquashfs.c: In function ‘progress_bar’:
mksquashfs.c:1930:3: warning: ‘return’ with no value, in function returning non-void
   return;
   ^~~~~~
mksquashfs.c:1922:5: note: declared here
 int progress_bar(long long current, long long max, int columns)
     ^~~~~~~~~~~~
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:76:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2659:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2659:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2659:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:76:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2716:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2716:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2716:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2106:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2201:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2228:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c:77:8: warning: type defaults to ‘int’ in declaration of ‘write_file’ [-Wimplicit-int]
 extern write_file(squashfs_inode *inode, struct dir_ent *dir_ent, int *c_size);
        ^~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:240:6:
      entry->dir->inode->buf.st_size,
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:238:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes %s\n",
     ^~~~
sort.c:238:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes %s\n",
                                      ~~~^
                                      %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:246:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:245:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:245:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:918:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      makedev((i->data >> 8) & 0xff, i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
unsquashfs.c:926:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
unsquashfs.c:70:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
uncomp.c: In function ‘sqlzma_un’:
uncomp.c:148:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
uncomp_r.c: In function ‘sqlzma_un’:
uncomp_r.c:148:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from LzmaAlone.cpp:18:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from LzmaAlone.cpp:18:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LzmaAlone.cpp: In function ‘int main2(int, const char**)’:
LzmaAlone.cpp:470:36: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kWriteError);
                                    ^
LzmaAlone.cpp:495:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:500:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:514:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaAlone.cpp:519:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaBenchCon.cpp: In member function ‘virtual LONG CBenchCallback::SetDecodeResult(const CBenchInfo&, bool)’:
LzmaBenchCon.cpp:145:20: warning: format not a string literal and no format arguments [-Wformat-security]
     fprintf(f, kSep);
                    ^
LzmaBenchCon.cpp: In function ‘LONG LzmaBenchCon(FILE*, UInt32, UInt32, UInt32)’:
LzmaBenchCon.cpp:204:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
LzmaBenchCon.cpp:211:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
../LZMA/LZMAEncoder.cpp: In member function ‘UInt32 NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32&)’:
../LZMA/LZMAEncoder.cpp:1185:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1186:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1202:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1205:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::CodeOneBlock(UInt64*, UInt64*, Int32*)’:
../LZMA/LZMAEncoder.cpp:1350:12: warning: variable ‘len’ set but not used [-Wunused-but-set-variable]
     UInt32 len, numDistancePairs;
            ^~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/MyString.cpp:11:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.cpp:11:0:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyVector.cpp:7:0:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LZMAEncoder_r.cc: In member function ‘UInt32 NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32&)’:
LZMAEncoder_r.cc:1185:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1186:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1202:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1205:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc: In member function ‘LONG NCompress::NLZMA::CEncoder::CodeOneBlock(UInt64*, UInt64*, Int32*)’:
LZMAEncoder_r.cc:1350:12: warning: variable ‘len’ set but not used [-Wunused-but-set-variable]
     UInt32 len, numDistancePairs;
            ^~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from comp.cc:20:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from comp.cc:20:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
comp.cc: In function ‘int LzmaCompress(Bytef*, uInt, Bytef*, uInt, sqlzma_opts*, uLong*)’:
comp.cc:125:2: warning: narrowing conversion of ‘avail_in’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
  };
  ^
comp.cc:123:22: warning: narrowing conversion of ‘(avail_in >> 8)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
             ~~~~~~~~~^~~~
comp.cc:123:37: warning: narrowing conversion of ‘(avail_in >> 16)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                            ~~~~~~~~~^~~~~
comp.cc:123:53: warning: narrowing conversion of ‘(avail_in >> 24)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                                            ~~~~~~~~~^~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:975:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:976:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:77:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2656:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2656:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2656:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:77:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2710:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2710:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2710:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2103:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2198:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2225:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:240:6:
      entry->dir->inode->buf.st_size,
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:238:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes %s\n",
     ^~~~
sort.c:238:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes %s\n",
                                      ~~~^
                                      %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:246:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:245:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:245:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:928:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      makedev((i->data >> 8) & 0xff, i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
uncomp.c: In function ‘sqlzma_un’:
uncomp.c:148:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
uncomp_r.c: In function ‘sqlzma_un’:
uncomp_r.c:148:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from LzmaAlone.cpp:18:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from LzmaAlone.cpp:18:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LzmaAlone.cpp: In function ‘int main2(int, const char**)’:
LzmaAlone.cpp:470:36: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kWriteError);
                                    ^
LzmaAlone.cpp:495:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:500:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaAlone.cpp:514:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaAlone.cpp:519:35: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kReadError);
                                   ^
LzmaBenchCon.cpp: In member function ‘virtual LONG CBenchCallback::SetDecodeResult(const CBenchInfo&, bool)’:
LzmaBenchCon.cpp:145:20: warning: format not a string literal and no format arguments [-Wformat-security]
     fprintf(f, kSep);
                    ^
LzmaBenchCon.cpp: In function ‘LONG LzmaBenchCon(FILE*, UInt32, UInt32, UInt32)’:
LzmaBenchCon.cpp:204:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
LzmaBenchCon.cpp:211:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
../LZMA/LZMAEncoder.cpp: In member function ‘UInt32 NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32&)’:
../LZMA/LZMAEncoder.cpp:1185:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1186:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1202:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp:1205:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../LZMA/LZMAEncoder.cpp: In member function ‘LONG NCompress::NLZMA::CEncoder::CodeOneBlock(UInt64*, UInt64*, Int32*)’:
../LZMA/LZMAEncoder.cpp:1350:12: warning: variable ‘len’ set but not used [-Wunused-but-set-variable]
     UInt32 len, numDistancePairs;
            ^~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/CommandLineParser.h:6,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/MyString.cpp:11:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.cpp:11:0:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/MyVector.cpp:7:0:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LZMAEncoder_r.cc: In member function ‘UInt32 NCompress::NLZMA::CEncoder::GetOptimumFast(UInt32&)’:
LZMAEncoder_r.cc:1185:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 2 >= lenMain && (backMain > (1 << 9)) ||
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1186:45: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         repLens[repMaxIndex] + 3 >= lenMain && (backMain > (1 << 15)))
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1202:42: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
       if (_longestMatchLength >= lenMain && newDistance < backMain ||
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc:1205:62: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
           _longestMatchLength + 1 >= lenMain && lenMain >= 3 && ChangePair(newDistance, backMain))
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LZMAEncoder_r.cc: In member function ‘LONG NCompress::NLZMA::CEncoder::CodeOneBlock(UInt64*, UInt64*, Int32*)’:
LZMAEncoder_r.cc:1350:12: warning: variable ‘len’ set but not used [-Wunused-but-set-variable]
     UInt32 len, numDistancePairs;
            ^~~
In file included from ../../../Common/MyString.h:9:0,
                 from ../../../Common/StringConvert.h:7,
                 from comp.cc:20:
../../../Common/MyVector.h: In member function ‘int CObjectVector<T>::Find(const T&) const’:
../../../Common/MyVector.h:204:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < Size(); i++)
     ^~~
../../../Common/MyVector.h:207:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from comp.cc:20:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:422:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for(int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:425:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
comp.cc: In function ‘int LzmaCompress(Bytef*, uInt, Bytef*, uInt, sqlzma_opts*, uLong*)’:
comp.cc:125:2: warning: narrowing conversion of ‘avail_in’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
  };
  ^
comp.cc:123:22: warning: narrowing conversion of ‘(avail_in >> 8)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
             ~~~~~~~~~^~~~
comp.cc:123:37: warning: narrowing conversion of ‘(avail_in >> 16)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                            ~~~~~~~~~^~~~~
comp.cc:123:53: warning: narrowing conversion of ‘(avail_in >> 24)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                                            ~~~~~~~~~^~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:974:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:975:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:77:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2654:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:2654:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:2654:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:77:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:2711:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:2711:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:2711:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2101:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2196:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2223:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:240:6:
      entry->dir->inode->buf.st_size,
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:238:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes %s\n",
     ^~~~
sort.c:238:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes %s\n",
                                      ~~~^
                                      %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:246:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:245:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:245:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:920:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      makedev((i->data >> 8) & 0xff, i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:1191:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.

             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
mksquashfs.c:1192:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.

             ^~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                       
mksquashfs.c: In function ‘get_fragment’:
mksquashfs.c:1489:78: warning: passing argument 3 of ‘LzmaUncompress’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
             if((res = LzmaUncompress((unsigned char *) buffer->data, &bytes, (const unsigned char *) data, size)) != SZ_OK)
                                                                              ^
In file included from mksquashfs.c:54:0:
lzmainterface.h:26:5: note: expected ‘char *’ but argument is of type ‘const unsigned char *’
 int LzmaUncompress(char *dst, unsigned long * dstlen, char *src, int srclen);
     ^~~~~~~~~~~~~~
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:86:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:3020:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:3020:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:3020:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:86:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:3074:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:3074:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:3074:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2463:3: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
   ftruncate(fd, bytes);
   ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2559:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2587:3: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
   ftruncate(fd, bytes);
   ^~~~~~~~~~~~~~~~~~~~
read_fs.c: In function ‘read_block’:
read_fs.c:106:44: warning: passing argument 3 of ‘LzmaUncompress’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
    if((res = LzmaUncompress(block, &bytes, (const unsigned char *) buffer, c_byte)) != SZ_OK)
                                            ^
In file included from read_fs.c:40:0:
lzmainterface.h:26:5: note: expected ‘char *’ but argument is of type ‘const unsigned char *’
 int LzmaUncompress(char *dst, unsigned long * dstlen, char *src, int srclen);
     ^~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:52:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:242:6:
      entry->dir->inode->buf.st_size,
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:240:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes %s\n",
     ^~~~
sort.c:240:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes %s\n",
                                      ~~~^
                                      %ld
sort.c:52:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:248:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:247:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:247:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘read_block’:
unsquashfs.c:715:62: warning: passing argument 3 of ‘LzmaUncompress’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
    if((res = LzmaUncompress((unsigned char *) block, &bytes, (const unsigned char *) buffer, c_byte)) != SZ_OK)
                                                              ^
In file included from unsquashfs.c:64:0:
lzmainterface.h:26:5: note: expected ‘char *’ but argument is of type ‘const unsigned char *’
 int LzmaUncompress(char *dst, unsigned long * dstlen, char *src, int srclen);
     ^~~~~~~~~~~~~~
unsquashfs.c: In function ‘read_data_block’:
unsquashfs.c:763:62: warning: passing argument 3 of ‘LzmaUncompress’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
    if((res = LzmaUncompress((unsigned char *) block, &bytes, (const unsigned char *) data, c_byte)) != SZ_OK)
                                                              ^
In file included from unsquashfs.c:64:0:
lzmainterface.h:26:5: note: expected ‘char *’ but argument is of type ‘const unsigned char *’
 int LzmaUncompress(char *dst, unsigned long * dstlen, char *src, int srclen);
     ^~~~~~~~~~~~~~
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:1308:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      makedev((i->data >> 8) & 0xff, i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
unsquashfs.c: In function ‘deflator’:
unsquashfs.c:2386:60: warning: passing argument 3 of ‘LzmaUncompress’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
    if((res = LzmaUncompress((unsigned char *) tmp, &bytes, (const unsigned char *) entry->data, SQUASHFS_COMPRESSED_SIZE_BLOCK(entry->size))) != SZ_OK)
                                                            ^
In file included from unsquashfs.c:64:0:
lzmainterface.h:26:5: note: expected ‘char *’ but argument is of type ‘const unsigned char *’
 int LzmaUncompress(char *dst, unsigned long * dstlen, char *src, int srclen);
     ^~~~~~~~~~~~~~
unsquashfs.c: In function ‘initialise_threads’:
unsquashfs.c:2469:16: warning: implicit declaration of function ‘get_nprocs’; did you mean ‘getentropy’? [-Wimplicit-function-declaration]
   processors = get_nprocs();
                ^~~~~~~~~~
                getentropy
uncomp.c: In function ‘LzmaUncompress’:
uncomp.c:58:11: warning: variable ‘state’ set but not used [-Wunused-but-set-variable]
  CLzmaDec state;
           ^~~~~
uncomp.c: In function ‘sqlzma_un’:
uncomp.c:166:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
uncomp.c: In function ‘LzmaUncompress’:
uncomp.c:45:82: warning: ‘props.lc’ is used uninitialized in this function [-Wuninitialized]
 #define LzmaProps_GetNumProbs(p) ((UInt32)LZMA_BASE_SIZE + (LZMA_LIT_SIZE << ((p)->lc + (p)->lp)))
                                                                                  ^~
uncomp.c:45:92: warning: ‘props.lp’ is used uninitialized in this function [-Wuninitialized]
 #define LzmaProps_GetNumProbs(p) ((UInt32)LZMA_BASE_SIZE + (LZMA_LIT_SIZE << ((p)->lc + (p)->lp)))
                                                                                            ^~
uncomp_r.c: In function ‘LzmaUncompress’:
uncomp_r.c:58:11: warning: variable ‘state’ set but not used [-Wunused-but-set-variable]
  CLzmaDec state;
           ^~~~~
uncomp_r.c: In function ‘sqlzma_un’:
uncomp_r.c:166:26: warning: field precision specifier ‘.*’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
   fprintf(stderr, "%s: %.*s\n", __func__, sizeof(a), a);
                        ~~^~
uncomp_r.c: In function ‘LzmaUncompress’:
uncomp_r.c:45:82: warning: ‘props.lc’ is used uninitialized in this function [-Wuninitialized]
 #define LzmaProps_GetNumProbs(p) ((UInt32)LZMA_BASE_SIZE + (LZMA_LIT_SIZE << ((p)->lc + (p)->lp)))
                                                                                  ^~
uncomp_r.c:45:92: warning: ‘props.lp’ is used uninitialized in this function [-Wuninitialized]
 #define LzmaProps_GetNumProbs(p) ((UInt32)LZMA_BASE_SIZE + (LZMA_LIT_SIZE << ((p)->lc + (p)->lp)))
                                                                                            ^~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from LzmaAlone.cpp:18:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:414:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for (int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:417:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
LzmaAlone.cpp: In function ‘int main2(int, const char**)’:
LzmaAlone.cpp:467:36: warning: format not a string literal and no format arguments [-Wformat-security]
         fprintf(stderr, kWriteError);
                                    ^
LzmaAlone.cpp:492:33: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(stderr, kReadError);
                                 ^
LzmaBenchCon.cpp: In member function ‘virtual LONG CBenchCallback::SetDecodeResult(const CBenchInfo&, bool)’:
LzmaBenchCon.cpp:145:20: warning: format not a string literal and no format arguments [-Wformat-security]
     fprintf(f, kSep);
                    ^
LzmaBenchCon.cpp: In function ‘LONG LzmaBenchCon(FILE*, UInt32, UInt32, UInt32)’:
LzmaBenchCon.cpp:204:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
LzmaBenchCon.cpp:211:22: warning: format not a string literal and no format arguments [-Wformat-security]
       fprintf(f, kSep);
                      ^
../LzmaEncoder.cpp: In member function ‘virtual LONG NCompress::NLzma::CEncoder::SetCoderProperties(const PROPID*, const PROPVARIANT*, UInt32)’:
../LzmaEncoder.cpp:123:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.fb = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:123:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.fb = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:125:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.mc = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:125:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.mc = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:127:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.algo = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:127:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.algo = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:129:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.dictSize = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:129:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.dictSize = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:131:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.pb = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:131:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.pb = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:133:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lp = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:133:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lp = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:135:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lc = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:135:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lc = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:137:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.numThreads = prop.ulVal; break;
         ^~
../LzmaEncoder.cpp:137:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.numThreads = prop.ulVal; break;
                                                     ^~~~~
../LzmaEncoder.cpp:139:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.numThreads = ((prop.boolVal == VARIANT_TRUE) ? 2 : 1); break;
         ^~
../LzmaEncoder.cpp:139:54: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.numThreads = ((prop.boolVal == VARIANT_TRUE) ? 2 : 1); break;
                                                      ^~~~~
../LzmaEncoder.cpp:141:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.writeEndMark = (prop.boolVal == VARIANT_TRUE); break;
         ^~
../LzmaEncoder.cpp:141:54: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.writeEndMark = (prop.boolVal == VARIANT_TRUE); break;
                                                      ^~~~~
../LzmaEncoder.cpp:144:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (!ParseMatchFinder(prop.bstrVal, &props.btMode, &props.numHashBytes /* , &_matchFinderBase.skipModeBits */))
         ^~
../LzmaEncoder.cpp:145:32: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           return E_INVALIDARG; break;
                                ^~~~~
In file included from ../../../Common/CommandLineParser.h:6:0,
                 from ../../../Common/CommandLineParser.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:414:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for (int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:417:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/MyString.cpp:10:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:414:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for (int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:417:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from ../../../Common/StringConvert.cpp:5:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:414:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for (int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:417:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
../../../../C/LzmaEnc.c: In function ‘LzmaEnc_Alloc’:
../../../../C/LzmaEnc.c:1922:8: warning: variable ‘btMode’ set but not used [-Wunused-but-set-variable]
   Bool btMode;
        ^~~~~~
LzmaEncoder_r.cc: In member function ‘virtual LONG NCompress::NLzma::CEncoder::SetCoderProperties(const PROPID*, const PROPVARIANT*, UInt32)’:
LzmaEncoder_r.cc:123:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.fb = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:123:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.fb = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:125:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.mc = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:125:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.mc = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:127:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.algo = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:127:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.algo = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:129:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.dictSize = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:129:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.dictSize = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:131:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.pb = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:131:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.pb = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:133:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lp = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:133:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lp = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:135:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lc = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:135:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.lc = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:137:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.numThreads = prop.ulVal; break;
         ^~
LzmaEncoder_r.cc:137:53: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_UI4) return E_INVALIDARG; props.numThreads = prop.ulVal; break;
                                                     ^~~~~
LzmaEncoder_r.cc:139:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.numThreads = ((prop.boolVal == VARIANT_TRUE) ? 2 : 1); break;
         ^~
LzmaEncoder_r.cc:139:54: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.numThreads = ((prop.boolVal == VARIANT_TRUE) ? 2 : 1); break;
                                                      ^~~~~
LzmaEncoder_r.cc:141:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.writeEndMark = (prop.boolVal == VARIANT_TRUE); break;
         ^~
LzmaEncoder_r.cc:141:54: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
         if (prop.vt != VT_BOOL) return E_INVALIDARG; props.writeEndMark = (prop.boolVal == VARIANT_TRUE); break;
                                                      ^~~~~
LzmaEncoder_r.cc:144:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (!ParseMatchFinder(prop.bstrVal, &props.btMode, &props.numHashBytes /* , &_matchFinderBase.skipModeBits */))
         ^~
LzmaEncoder_r.cc:145:32: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
           return E_INVALIDARG; break;
                                ^~~~~
In file included from ../../../Common/StringConvert.h:7:0,
                 from comp.cc:20:
../../../Common/MyString.h: In member function ‘int CStringBase<T>::FindOneOf(const CStringBase<T>&) const’:
../../../Common/MyString.h:414:5: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
     for (int i = 0; i < _length; i++)
     ^~~
../../../Common/MyString.h:417:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
       return -1;
       ^~~~~~
comp.cc: In function ‘int LzmaCompress(Bytef*, uInt, Bytef*, uInt, sqlzma_opts*, uLong*)’:
comp.cc:123:2: warning: narrowing conversion of ‘avail_in’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
  };
  ^
comp.cc:121:22: warning: narrowing conversion of ‘(avail_in >> 8)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
             ~~~~~~~~~^~~~
comp.cc:121:37: warning: narrowing conversion of ‘(avail_in >> 16)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                            ~~~~~~~~~^~~~~
comp.cc:121:53: warning: narrowing conversion of ‘(avail_in >> 24)’ from ‘uInt {aka unsigned int}’ to ‘Byte {aka unsigned char}’ inside { } [-Wnarrowing]
   avail_in, avail_in >> 8, avail_in >> 16, avail_in >> 24,
                                            ~~~~~~~~~^~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:1173:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf->st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                             
mksquashfs.c:1174:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf->st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                        
mksquashfs.c: In function ‘reader_scan’:
mksquashfs.c:2005:9: warning: ‘return’ with a value, in function returning void
  return NULL;
         ^~~~
mksquashfs.c:1987:6: note: declared here
 void reader_scan(struct dir_info *dir) {
      ^~~~~~~~~~~
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:85:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:3006:67:
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~~
mksquashfs.c:3006:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
mksquashfs.c:3006:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld bytes %s\n", filename, buf->st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~~^
                                       %ld
mksquashfs.c:85:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:3060:70:
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                                                      ~~~~~~
mksquashfs.c:3060:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
       ^~~~
mksquashfs.c:3060:43: note: format string is defined here
       INFO("file %s, uncompressed size %lld bytes LINK\n", filename, buf->st_size);
                                        ~~~^
                                        %ld
mksquashfs.c: In function ‘write_file_blocks’:
mksquashfs.c:2449:3: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
   ftruncate(fd, bytes);
   ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘write_file_blocks_dup’:
mksquashfs.c:2545:4: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
    ftruncate(fd, bytes);
    ^~~~~~~~~~~~~~~~~~~~
mksquashfs.c:2573:3: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
   ftruncate(fd, bytes);
   ^~~~~~~~~~~~~~~~~~~~
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:240:6:
      entry->dir->inode->buf.st_size,
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:238:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes %s\n",
     ^~~~
sort.c:238:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes %s\n",
                                      ~~~^
                                      %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:246:28:
      entry->dir->pathname, entry->dir->inode->buf.st_size);
                            ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:245:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes LINK\n",
     ^~~~
sort.c:245:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes LINK\n",
                                      ~~~^
                                      %ld
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:1297:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      makedev((i->data >> 8) & 0xff, i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
unsquashfs.c: In function ‘initialise_threads’:
unsquashfs.c:2487:16: warning: implicit declaration of function ‘get_nprocs’; did you mean ‘getentropy’? [-Wimplicit-function-declaration]
   processors = get_nprocs();
                ^~~~~~~~~~
                getentropy
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:1409:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   unsigned int major = major(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1410:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   unsigned int minor = minor(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:3476:9: warning: type defaults to ‘int’ in declaration of ‘pseudo_ino’ [-Wimplicit-int]
  static pseudo_ino = 1;
         ^~~~~~~~~~
mksquashfs.c:3517:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
    pseudo_ent->dev->minor);
             ^~~~~~~~~~~~~~~                                                                                                                                                                                                                                              
mksquashfs.c: In function ‘dir_scan3’:
mksquashfs.c:92:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:3559:7:
       buf->st_size, duplicate_file ?
       ~~~~~~
mksquashfs.c:3557:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %lld "
      ^~~~
mksquashfs.c:3557:42: note: format string is defined here
      INFO("file %s, uncompressed size %lld "
                                       ~~~^
                                       %ld
mksquashfs.c:92:14: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’[-Wformat=]
       printf("mksquashfs: "s, ## args);\
              ^
mksquashfs.c:3634:8:
        buf->st_size);
        ~~~~~~
mksquashfs.c:3631:7: note: in expansion of macro ‘INFO’
       INFO("file %s, uncompressed "
       ^~~~
mksquashfs.c:3632:17: note: format string is defined here
        "size %lld bytes LINK"
              ~~~^
              %ld
sort.c: In function ‘sort_files_and_write’:
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:257:6:
      entry->dir->inode->buf.st_size,
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:255:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes %s"
     ^~~~
sort.c:255:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes %s"
                                      ~~~^
                                      %ld
sort.c:50:26: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
       if(!silent) printf("mksquashfs: "s, ## args); \
                          ^
sort.c:264:6:
      entry->dir->inode->buf.st_size);
      ~~~~~~~~~~~~~~~~~~~~~~~~
sort.c:262:5: note: in expansion of macro ‘INFO’
     INFO("file %s, uncompressed size %lld bytes "
     ^~~~
sort.c:262:41: note: format string is defined here
     INFO("file %s, uncompressed size %lld bytes "
                                      ~~~^
                                      %ld
../LzmaEnc.c: In function ‘LzmaEnc_Alloc’:
../LzmaEnc.c:1922:8: warning: variable ‘btMode’ set but not used [-Wunused-but-set-variable]
   Bool btMode;
        ^~~~~~
ar: `u' modifier ignored since `D' is the default (see `U')
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:944:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
       i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                          
unsquashfs.c: In function ‘initialise_threads’:
unsquashfs.c:1816:16: warning: implicit declaration of function ‘get_nprocs’; did you mean ‘getentropy’? [-Wimplicit-function-declaration]
   processors = get_nprocs();
                ^~~~~~~~~~
                getentropy
unsquash-3.c: In function ‘read_fragment_table_3’:
unsquash-3.c:39:3: warning: ‘return’ with no value, in function returning non-void
   return;
   ^~~~~~
unsquash-3.c:29:5: note: declared here
 int read_fragment_table_3()
     ^~~~~~~~~~~~~~~~~~~~~
unsquash-4.c: In function ‘read_fragment_table_4’:
unsquash-4.c:41:3: warning: ‘return’ with no value, in function returning non-void
   return;
   ^~~~~~
unsquash-4.c:31:5: note: declared here
 int read_fragment_table_4()
     ^~~~~~~~~~~~~~~~~~~~~
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:1288:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   unsigned int major = major(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1289:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   unsigned int minor = minor(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:3586:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
    pseudo_ent->dev->minor);
             ^~~~~~~~~~~~~~~                                                                                                                                                                                                                                              
pseudo.c:62:13: warning: ‘dump_pseudo’ defined but not used [-Wunused-function]
 static void dump_pseudo(struct pseudo *pseudo, char *string)
             ^~~~~~~~~~~
lzma/C/LzmaEnc.c: In function ‘LzmaEnc_Alloc’:
lzma/C/LzmaEnc.c:1922:8: warning: variable ‘btMode’ set but not used [-Wunused-but-set-variable]
   Bool btMode;
        ^~~~~~
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:931:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
       i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                          
squashfs/mksquashfs.c: In function ‘create_inode’:
squashfs/mksquashfs.c:692:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   dev->rdev = (unsigned short) ((major(buf.st_rdev) << 8) |
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                              
squashfs/mksquashfs.c:693:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
    (minor(buf.st_rdev) & 0xff));
             ^~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                         
squashfs/mksquashfs.c: In function ‘linux_readdir’:
squashfs/mksquashfs.c:1303:12: warning: implicit declaration of function ‘devtable_readdir’; did you mean ‘linux_readdir’? [-Wimplicit-function-declaration]
       if ( devtable_readdir(l, filename, dir_name, devtable_inode_info ) )
            ^~~~~~~~~~~~~~~~
            linux_readdir
squashfs/mksquashfs.c: In function ‘interpret_table_entry’:
squashfs/mksquashfs.c:1331:20: warning: format ‘%a’ expects argument of type ‘float *’, but argument 3 has type ‘char **’ [-Wformat=]
  if (sscanf (line, "%" SCANF_PREFIX "s %c %lo %lu %lu %lu %lu %lu %lu %lu",
                    ^~~
squashfs/mksquashfs.c:83:23: note: format string is defined here
 #define SCANF_PREFIX "a"
                       ^
squashfs/mksquashfs.c:1346:26: warning: implicit declaration of function ‘basename’; did you mean ‘rename’? [-Wimplicit-function-declaration]
  strcpy( dirname, (char*)basename(full) );
                          ^~~~~~~~
                          rename
squashfs/mksquashfs.c:1346:19: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  strcpy( dirname, (char*)basename(full) );
                   ^
squashfs/mksquashfs.c:1368:5: warning: implicit declaration of function ‘asprintf’; did you mean ‘vsprintf’? [-Wimplicit-function-declaration]
     asprintf(&buf, "%s%lu", name, i);
     ^~~~~~~~
     vsprintf
squashfs/mksquashfs.c:1369:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
     rdev = makedev(major, minor + (i * increment - start));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                              
squashfs/mksquashfs.c:1374:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
    dev_t rdev = makedev(major, minor);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                   
squashfs/mksquashfs.c: In function ‘devtable_readdir’:
squashfs/mksquashfs.c:1412:22: warning: implicit declaration of function ‘isspace’ [-Wimplicit-function-declaration]
    while (len > 0 && isspace(line[len - 1]))
                      ^~~~~~~
squashfs/mksquashfs.c: In function ‘dir_scan’:
squashfs/mksquashfs.c:67:51: warning: format ‘%Ld’ expects argument of type ‘long long int’, but argument 3 has type ‘__off_t {aka long int}’ [-Wformat=]
 #define INFO(s, args...)  do { if(!silent) printf("mksquashfs: "s, ## args); } while(0)
                                                   ^
squashfs/mksquashfs.c:1620:67:
      INFO("file %s, uncompressed size %Ld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
                                                                   ~~~~~
squashfs/mksquashfs.c:1620:6: note: in expansion of macro ‘INFO’
      INFO("file %s, uncompressed size %Ld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
      ^~~~
squashfs/mksquashfs.c:1620:41: note: format string is defined here
      INFO("file %s, uncompressed size %Ld bytes, %s\n", filename, buf.st_size, duplicate_file ? "DUPLICATE" : "");
                                       ~~^
                                       %ld
squashfs/mksquashfs.c:1666:11: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
     ERROR("%s unrecognised file type, mode is %x\n", filename, mode);
           ^
squashfs/mksquashfs.c:68:49: note: in definition of macro ‘ERROR’
 #define ERROR(s, args...)  do { fprintf(stderr, s, ## args); } while(0)
                                                 ^
squashfs/mksquashfs.c: In function ‘write_file’:
squashfs/mksquashfs.c:1247:5: warning: ignoring return value of ‘ftruncate’, declared with attribute warn_unused_result [-Wunused-result]
     ftruncate(fd, bytes);
     ^~~~~~~~~~~~~~~~~~~~
nb4-unsquash.c: In function ‘create_inode’:
nb4-unsquash.c:937:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
      makedev((i->data >> 8) & 0xff, i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                            
nb4-unsquash.c:945:11: warning: too many arguments for format [-Wformat-extra-args]
     ERROR("create_inode: could not create %s device %s, because you're not superuser!\n",
           ^
nb4-unsquash.c:81:23: note: in definition of macro ‘ERROR’
       fprintf(stderr, s, ## args); \
                       ^
LZMADecoder.c: In function ‘LzmaDecoderCodeReal’:
LZMADecoder.c:179:49: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
       printf("CodeReal: invalid argument %x\n", (UINT32) anOutSize );
                                                 ^
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:1369:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   unsigned int major = major(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1370:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   unsigned int minor = minor(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1393:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   unsigned int major = major(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1394:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   unsigned int minor = minor(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:3794:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
    pseudo_ent->dev->minor);
             ^~~~~~~~~~~~~~~                                                                                                                                                                                                                                              
pseudo.c:70:13: warning: ‘dump_pseudo’ defined but not used [-Wunused-function]
 static void dump_pseudo(struct pseudo *pseudo, char *string)
             ^~~~~~~~~~~
xz_wrapper.c: In function ‘xz_compress’:
xz_wrapper.c:201:6: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
      if (opts->fb)
      ^~
xz_wrapper.c:204:3: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   stream->opt.dict_size = stream->dictionary_size;
   ^~~~~~
lzma_xz_options.c:32:19: warning: duplicate ‘const’ declaration specifier [-Wduplicate-decl-specifier]
 static const char const *lzmaver_str[] = { "", "lzma", "xz" };
                   ^~~~~
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:940:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
       i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                          
mksquashfs.c: In function ‘create_inode’:
mksquashfs.c:1354:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   unsigned int major = major(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1355:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   unsigned int minor = minor(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1378:13: warning: In the GNU C Library, "major" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "major", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "major", you should undefine it after including <sys/types.h>.
   unsigned int major = major(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c:1379:13: warning: In the GNU C Library, "minor" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "minor", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "minor", you should undefine it after including <sys/types.h>.
   unsigned int minor = minor(buf->st_rdev);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                              
mksquashfs.c: In function ‘dir_scan2’:
mksquashfs.c:3779:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
    pseudo_ent->dev->minor);
             ^~~~~~~~~~~~~~~                                                                                                                                                                                                                                              
pseudo.c:69:13: warning: ‘dump_pseudo’ defined but not used [-Wunused-function]
 static void dump_pseudo(struct pseudo *pseudo, char *string)
             ^~~~~~~~~~~
unsquashfs.c: In function ‘create_inode’:
unsquashfs.c:937:13: warning: In the GNU C Library, "makedev" is defined
 by <sys/sysmacros.h>. For historical compatibility, it is
 currently defined by <sys/types.h> as well, but we plan to
 remove this soon. To use "makedev", include <sys/sysmacros.h>
 directly. If you did not intend to use a system-defined macro
 "makedev", you should undefine it after including <sys/types.h>.
       i->data & 0xff)) == -1) {
             ^~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                          
webdecomp.c: In function ‘detect_key’:
webdecomp.c:201:100: warning: format ‘%d’ expects argument of type ‘int’, but argument 5 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
   fprintf(stderr, "WARNING: Failed to determine key based on %d entries with a total size of %d / %d\n", total_entries, total_size, wsize);
                                                                                                   ~^
                                                                                                   %ld
buffalo-lib.c: In function ‘check_magic’:
buffalo-lib.c:252:2: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  if (!memcmp("start", magic, ENC_MAGIC_LEN));
  ^~
buffalo-lib.c:253:3: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   return 0;
   ^~~~~~
buffalo-lib.c:255:2: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
  if (!memcmp("asar1", magic, ENC_MAGIC_LEN));
  ^~
buffalo-lib.c:256:3: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   return 0;
   ^~~~~~
unyaffs2.c: In function ‘unyaffs2_obj_chattr’:
unyaffs2.c:763:2: warning: ignoring return value of ‘lchown’, declared with attribute warn_unused_result [-Wunused-result]
  lchown(fpath, obj->uid, obj->gid);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/string.h:494:0,
                 from unyaffs2.c:26:
In function ‘memcpy’,
    inlined from ‘unyaffs2_extract_hardlink.constprop’ at unyaffs2.c:1222:2,
    inlined from ‘unyaffs2_extract_obj’ at unyaffs2.c:1289:10:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:10: warning: ‘__builtin___memcpy_chk’ writing 16 bytes into a region of size8 overflows the destination [-Wstringop-overflow=]
   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Scanning firmware...

Scan Time:     2018-12-09 11:24:45
Target File:   /home/ubuntu/firmware.bin
MD5 Checksum:  52bf83441873f105c1bae025118bb5b9
Signatures:    344

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
0             0x0             TP-Link firmware header, firmware version: 0.-15276.3, image version: "", product ID: 0x0, product version: 138477585, kernel load address: 0x0, kernel entry point: 0x80002000, kernel offset: 4063744, kernel length: 512, rootfs offset: 849290, rootfs length: 1048576, bootloader offset: 2883584, bootloader length: 0
13424         0x3470          U-Boot version string, "U-Boot 1.1.4 (Mar 25 2016 - 16:59:44)"
13472         0x34A0          CRC32 polynomial table, big endian
14784         0x39C0          uImage header, header size: 64 bytes, header CRC: 0x85572A9C, created: 2016-03-25 08:59:46, image size:35924 bytes, Data Address: 0x80010000, Entry Point: 0x80010000, data CRC: 0xADACFD5C, OS: Linux, CPU: MIPS, image type: Firmware Image, compression type: lzma, image name: "u-boot image"
14848         0x3A00          LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 93944 bytes
131584        0x20200         TP-Link firmware header, firmware version: 0.0.3, image version: "", product ID: 0x0, product version: 138477585, kernel load address: 0x0, kernel entry point: 0x80002000, kernel offset: 3932160, kernel length: 512, rootfs offset: 849290, rootfs length: 1048576, bootloader offset: 2883584, bootloader length: 0
132096        0x20400         LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 2495224 bytes
1180160       0x120200        Squashfs filesystem, little endian, version 4.0, compression:lzma, size: 2776683 bytes, 596 inodes, blocksize: 131072 bytes, created: 2016-03-25 09:24:22

Extracting 1180160 bytes of tp-link header image at offset 0
Extracting squashfs file system at offset 1180160
Extracting squashfs files...
Firmware extraction successful!
Firmware parts can be found in '/home/ubuntu/firmware-mod-kit/fmk/*'
